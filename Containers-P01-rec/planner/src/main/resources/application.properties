##############
# Grpc details
##############
grpc.client.weatherServer.address=${GRPC_CLIENT_WEATHERSERVER_ADDRESS}
grpc.client.weatherServer.negotiationType=PLAINTEXT

################################
# Stream cloud and broker config
################################

# Funcional model: definition of consumers and producers (name of the bean method)
spring.cloud.stream.function.definition:consumer;producer

##########
# Producer
##########
spring.cloud.stream.source=producer
spring.cloud.stream.function.bindings.producer-out-0=output
spring.cloud.stream.bindings.output.destination=eoloplantCreationProgressNotifications
spring.cloud.stream.bindings.output.group=eoloplantCreationProgressNotifications
spring.cloud.stream.bindings.output.producer.required-groups=eoloplantCreationProgressNotifications
# Rabbit spacific (do not create exchanges, as js code does not expect them, just a queue)
spring.cloud.stream.rabbit.bindings.output.producer.queue-name-group-only=true

##########
# Consumer
##########
spring.cloud.stream.function.bindings.consumer-in-0=input
spring.cloud.stream.bindings.input.destination=eoloplantCreationRequests
spring.cloud.stream.bindings.input.group=eoloplantCreationRequests
# Rabbit specific (do not add a prefix to queue name)
spring.cloud.stream.rabbit.bindings.input.consumer.queue-name-group-only=true

####################
# Connection details
####################

# Rabbit connection details
spring.cloud.stream.rabbit.binder.nodes=${SPRING_CLOUD_STREAM_RABBIT_BINDER_NODES}
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD}

# Kafka connection details
spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.auto-create-topics=true

# Default broker
spring.cloud.stream.default-binder=rabbit